pipeline {
    agent any
     environment {
        registry = '224498103667.dkr.ecr.ap-south-1.amazonaws.com/ci-cd'
    }
   
    stages {
          stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], userRemoteConfigs: [[url: 'https://github.com/anusha1908/java-example.git']]])
            }
        }
           stage('Building image') {
             steps{
                  script {
                   dockerImage = docker.build registry
                   }
      }
           }
    
            stage('Pushing to ECR') {
             steps{  
                  script {
               withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws']]) {
                        sh 'aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 224498103667.dkr.ecr.ap-south-1.amazonaws.com'
                        sh 'docker push 224498103667.dkr.ecr.ap-south-1.amazonaws.com/ci-cd:latest'
}

}
                  }
            }
             stage('test') {
               steps {
            echo " testing..."
         }
       }
            stage('Docker Run') {
              steps{
                   script {
                sh 'docker run -d -p 8082:8080 --rm --name Container2 224498103667.dkr.ecr.ap-south-1.amazonaws.com/ci-cd:latest'
     
      }
    }
        }
        stage('Deploying to Kubernetes') {
              steps{
					  withKubeConfig([credentialsId: 'k8s', serverUrl: 'https://172.31.33.161:6443']) {
                        
                        sh "kubectl apply -f app.yaml -n dev"
                       
						}
    
                    }
					
					
         }           
                
            
    }
  }
